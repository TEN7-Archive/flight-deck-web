---
- hosts: web
  roles:
    - ten7.flightdeck_base
  tasks:
    - name: Install needed software
      apk:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - "py-mysqldb"
        - "bash"
        - "libcap"
        - "zlib"
        - "apache2"
        - "php5-apache2"
        - "curl"
        - "git"
        - "patch"
        - "php5-cli"
        - "php5-curl"
        - "php5-ctype"
        - "php5-dom"
        - "php5-gd"
        - "php5-iconv"
        - "php5-json"
        - "php5-ldap"
        - "php5-mcrypt"
        - "php5-mysql"
        - "php5-mysqli"
        - "php5-opcache"
        - "php5-openssl"
        - "php5-pdo"
        - "php5-pdo_mysql"
        - "php5-pdo_sqlite"
        - "php5-pdo_dblib"
        - "php5-phar"
        - "php5-soap"
        - "php5-sockets"
        - "php5-xml"
        - "php5-xmlreader"
        - "php5-zlib"
        - "mariadb-client"
        - "rsync"
        - "openssh-client"
        # - "nodejs-current"
        - "npm"
        - "imagemagick"
      notify:
        - clear caches
    - name: Install the additional packages from pip
      pip:
        name:
          - "passlib"
          - "PyMySQL"
        extra_args: "--ignore-installed"
    - name: Install build dependencies in a virtual package
      shell: >
        apk --no-cache \
            --virtual flightdeck-build \
             add autoconf \
                 binutils-gold \
                 g++ \
                 gcc \
                 gnupg \
                 grep \
                 imagemagick-dev \
                 libc-dev \
                 libstdc++ \
                 linux-headers \
                 make \
                 php5-pear \
                 php5-dev \
                 zlib-dev
      notify:
        - uninstall build deps
    - name: Ensure key directories are owned by apache
      file:
        path: "{{ item }}"
        state: directory
        owner: "apache"
        group: "apache"
        mode: "u=rwx,g=rwx,o=r"
        recurse: yes
      loop:
        - "/etc/apache2"
        - "/etc/ssl/apache2"
        - "/etc/apache2/sites.d"
        - "/etc/php5"
        - "/run/apache2"
        - "/var/log/apache2"
        - "/var/www"
        - "/var/www/.drush"
        - "/var/www/.drush/sites"
        - "/var/www/.npm-global"
    - name: Link logs files to stdout for the Docker log collector
      file:
        src: "{{ item }}"
        dest: "/dev/stdout"
        state: link
        force: yes
        follow: no
      loop:
        - "/var/log/apache2/access.log"
        - "/var/log/apache2/000_default-access_log"
        - "/var/log/apache2/000_default_ssl-access_log"
    - name: Link logs files to stderr for the Docker log collector
      file:
        src: "{{ item }}"
        dest: "/dev/stderr"
        state: link
        force: yes
        follow: no
      loop:
        - "/var/log/apache2/error.log"
        - "/var/log/apache2/000_default-error_log"
        - "/var/log/apache2/000_default_ssl-error_log"
    - name: Symlink php5 to php
      file:
        src: "/usr/bin/php5"
        dest: "/usr/bin/php"
        state: link
        force: yes
    - name: Install imagemagick, memcache, xdebug from pecl
      shell: >
        yes | pecl install memcache &&
        pecl install xdebug-2.5.5 &&
        pecl install imagick
    - name: Install Composer
      shell: >
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
      args:
        warn: no
    - name: Install Drush
      shell: >
        composer global require consolidation/cgr &&
        /var/www/.composer/vendor/bin/cgr drush/drush:{{ flightdeck_web.drushVersion | default('~8.3.0') }} &&
        /var/www/.composer/vendor/bin/drush core:init -y
      become: yes
      become_user: "apache"
      become_method: "su"
    - name: Set node global packages to install as user-local
      shell: >
        npm config set prefix '/var/www/.npm-global'
      become: yes
      become_user: "apache"
      become_method: "su"
    - name: Install node 10
      shell: >
        cd /tmp &&
        curl -sfSLO https://nodejs.org/dist/v10.14.2/node-v10.14.2.tar.xz &&
        tar -xf node-v10.14.2.tar.xz &&
        cd node-v10.14.2 &&
        ./configure --prefix=/usr --fully-static --without-npm &&
        make -j$(getconf _NPROCESSORS_ONLN) &&
        make install
    - name: Install theme utilities
      shell: >
        npm install -g sass gulp
  handlers:
    - name: uninstall build deps
      shell: >
        apk del flightdeck-build
    - name: clear caches
      shell: >
        rm -rf {{ item }}
      args:
        warn: no
      loop:
        - "/tmp/*"
        - "/var/cache/apk/*"
        - "/var/www/.composer/cache"
        - "/var/www/.npm/_cacache"
