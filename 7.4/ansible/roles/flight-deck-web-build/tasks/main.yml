---
- name: Do base configuration
  include_role:
    name: "ten7.flightdeck_base"
- name: Install needed software
  apk:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - "apache2"
    - "libcap"
    - "zlib"
    - "apache2"
    - "apache2-ssl"
    - "apache2-proxy"
    - "php7-apache2"
    - "php7"
    - "git"
    - "patch"
    - "curl"
    - "imagemagick"
    - "php7-bcmath"
    - "php7-ctype"
    - "php7-curl"
    - "php7-dom"
    - "php7-fileinfo"
    - "php7-gd"
    - "php7-iconv"
    - "php7-intl"
    - "php7-json"
    - "php7-ldap"
    - "php7-mbstring"
    - "php7-mcrypt"
    - "php7-memcached"
    - "php7-mysqli"
    - "php7-mysqlnd"
    - "php7-opcache"
    - "php7-openssl"
    - "php7-phar"
    - "php7-sqlite3"
    - "php7-odbc"
    - "php7-pdo_odbc"
    - "php7-pdo"
    - "php7-pdo_mysql"
    - "php7-pdo_sqlite"
    - "php7-phar"
    - "php7-soap"
    - "php7-session"
    - "php7-simplexml"
    - "php7-tokenizer"
    - "php7-xdebug"
    - "php7-exif"
    - "php7-xml"
    - "php7-xmlreader"
    - "php7-xmlwriter"
    - "php7-zip"
    - "php7-zlib"
    - "py3-passlib"
    - "py3-mysqlclient"
    - "py3-jmespath"
    - "composer"
    - "mariadb-client"
    - "rsync"
    - "openssh-client"
    - "unixodbc-dev"
    - "freetds-dev"
  notify:
    - clear caches
# Install node from Alpine 3.12 as Node SASS doesn't support the newer node on
# the Alpine 3.13 repos just yet.
- name: Install node
  command: >
    apk add
    --repository https://dl-cdn.alpinelinux.org/alpine/v3.12/main
    nodejs=12.22.1-r0
    nodejs-npm=12.22.1-r0
    libsass=3.6.4-r0
- name: Ensure key directories are owned by apache
  file:
    path: "{{ item }}"
    state: directory
    owner: "apache"
    group: "apache"
    mode: "u=rwx,g=rwx,o=r"
    recurse: yes
  loop:
    - "/etc/apache2"
    - "/etc/ssl/apache2"
    - "/etc/apache2/sites.d"
    - "/etc/php7"
    - "/run/apache2"
    - "/var/log/apache2"
    - "/var/www"
    - "/var/www/.drush"
    - "/var/www/.drush/sites"
    - "/var/www/.npm-global"
    - "/srv/html"
- name: Link logs files to stdout for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stdout"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/access.log"
    - "/var/log/apache2/000_default-access_log"
    - "/var/log/apache2/000_default_ssl-access_log"
- name: Link logs files to stderr for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stderr"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/error.log"
    - "/var/log/apache2/000_default-error_log"
    - "/var/log/apache2/000_default_ssl-error_log"
- name: Install Drush
  shell: >
    composer global require consolidation/cgr &&
    /var/www/.composer/vendor/bin/cgr drush/drush:{{ flightdeck_drush_version | default('^10.0.0') }} &&
    /var/www/.composer/vendor/bin/drush core:init -y
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Set node global packages to install as user-local
  shell: >
    npm config set prefix '/var/www/.npm-global'
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install theme utilities
  shell: >
    npm install -g sass gulp
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Configure ODBC
  template:
    src: "templates/odbcinst.ini"
    dest: "/etc/odbcinst.ini"
    owner: "root"
    group: "root"
    mode: "u=rw,g=r,o=r"
- name: Template default index.html
  template:
    src: "templates/index.html"
    dest: "/srv/html/index.html"
    owner: "apache"
    group: "apache"
    mode: "u=rw,g=r,o=r"
